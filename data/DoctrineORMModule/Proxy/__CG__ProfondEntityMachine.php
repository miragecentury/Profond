<?php

namespace DoctrineORMModule\Proxy\__CG__\Profond\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Machine extends \Profond\Entity\Machine implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'connectionType', 'config', 'label', 'keypass', 'cpu', 'ready', 'installIncomming', 'dateCrea', 'lastping', 'Jobs');
        }

        return array('__isInitialized__', 'id', 'connectionType', 'config', 'label', 'keypass', 'cpu', 'ready', 'installIncomming', 'dateCrea', 'lastping', 'Jobs');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Machine $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getConnectionType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConnectionType', array());

        return parent::getConnectionType();
    }

    /**
     * {@inheritDoc}
     */
    public function getConfig()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfig', array());

        return parent::getConfig();
    }

    /**
     * {@inheritDoc}
     */
    public function getLabel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLabel', array());

        return parent::getLabel();
    }

    /**
     * {@inheritDoc}
     */
    public function getCpu()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCpu', array());

        return parent::getCpu();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function setConnectionType($connectionType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConnectionType', array($connectionType));

        return parent::setConnectionType($connectionType);
    }

    /**
     * {@inheritDoc}
     */
    public function setConfig($config)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConfig', array($config));

        return parent::setConfig($config);
    }

    /**
     * {@inheritDoc}
     */
    public function setLabel($label)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLabel', array($label));

        return parent::setLabel($label);
    }

    /**
     * {@inheritDoc}
     */
    public function setCpu($cpu)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCpu', array($cpu));

        return parent::setCpu($cpu);
    }

    /**
     * {@inheritDoc}
     */
    public function getReady()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReady', array());

        return parent::getReady();
    }

    /**
     * {@inheritDoc}
     */
    public function getInstallIncomming()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInstallIncomming', array());

        return parent::getInstallIncomming();
    }

    /**
     * {@inheritDoc}
     */
    public function getDateCrea()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateCrea', array());

        return parent::getDateCrea();
    }

    /**
     * {@inheritDoc}
     */
    public function setReady($ready)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReady', array($ready));

        return parent::setReady($ready);
    }

    /**
     * {@inheritDoc}
     */
    public function setInstallIncomming($installIncomming)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInstallIncomming', array($installIncomming));

        return parent::setInstallIncomming($installIncomming);
    }

    /**
     * {@inheritDoc}
     */
    public function setDateCrea($dateCrea)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateCrea', array($dateCrea));

        return parent::setDateCrea($dateCrea);
    }

    /**
     * {@inheritDoc}
     */
    public function getKeypass()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getKeypass', array());

        return parent::getKeypass();
    }

    /**
     * {@inheritDoc}
     */
    public function setKeypass($keypass)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setKeypass', array($keypass));

        return parent::setKeypass($keypass);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastping()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastping', array());

        return parent::getLastping();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastping($lastping)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastping', array($lastping));

        return parent::setLastping($lastping);
    }

}
